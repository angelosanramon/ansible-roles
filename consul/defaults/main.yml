consul_version: 1.8.5
consul_user: consul
consul_group: consul
consul_config_path: /etc/consul
consul_config_file: config.json
consul_configd_path: "{{ consul_config_path }}/consul.d"
consul_data_path: /var/lib/consul
consul_log_path: /var/log/consul
consul_log_file: consul.log
consul_run_path: /run/consul
consul_certs_path: "{{ consul_config_path }}/consul.d/tls"
consul_agent_mode: server
consul_datacenter: dc1
consul_domain: consul
consul_servers_group_name: consul_servers
consul_port: 8500

# Options for consul configuration file
consul_config_options:
  enable_script_checks: true
  enable_local_script_checks: true
  leave_on_terminate: true
  rejoin_after_leave: true
  log_level: INFO
  log_rotate_max_files: 7
  ui: true
  dns_config:
    enable_truncate: true
    only_passing: true
  acl:
    enabled: true
    enable_token_persistence: true
    default_policy: deny
  ca_path: "{{ consul_certs_path }}/certs"
  ca_file: "{{ consul_certs_path }}/certs/{{ consul_domain }}-agent-ca.pem"
  cert_file: >-
    {{ consul_certs_path }}/certs/{{ consul_datacenter }}-server-{{
    consul_domain }}-0.pem
  key_file: >-
    {{ consul_certs_path }}/keys/{{ consul_datacenter }}-server-{{
    consul_domain }}-0-key.pem
  verify_incoming: true
  verify_outgoing: true
  verify_incoming_rpc: true
  verify_server_hostname: true
  auto_encrypt:
    allow_tls: true

# Options for consul command line arguments
consul_commandline_options: []
# example:
# consul_commandline_options:
#  - -encrypt=WLpgAtkxNtQHR87SBS+wT5cpx83I238J5hlNuts1ZJo=

consul_env_vars: []

consul_checks: []
# consul_checks:
#   - Name: SSH TCP on port 22
#     ID: ssh
#     TCP: localhost:22
#     Interval: 10s
#     Timeout: 1s

consul_services: []
# consul_services:
#   - Name: redis
#     ID: redis1
#     Tags:
#       - primary
#       - v1
#     Address: 127.0.0.1
#     Port: 8000
#     Meta:
#       redis_version: "4.0"
#     EnableTagOverride: false
#     Check:
#       DeregisterCriticalServiceAfter: "90m"
#       Args:
#         - /usr/local/bin/check_redis.py
#       Interval: "10s"
#       Timeout: "5s"
#     Weights:
#       Passing: 10
#       Warning: 1
#     replace-existing-checks: true

consul_acl_policies: []
# consul_acl_policies:
#   - Name: vault_policy
#     Description: Policy for Vault access
#     Rules: |-
#       key_prefix "vault/" {
#         policy = "write"
#       }
#       node_prefix "" {
#         policy = "write"
#       }
#       service "vault" {
#         policy = "write"
#       }
#       agent_prefix "" {
#         policy = "write"
#       }
#       session_prefix "" {
#         policy = "write"
#       }
#   - Name: node_policy
#     Description: Policy for Consul agent node
#     Rules: |-
#       agent_prefix "" {
#         policy = "write"
#       }
#       node_prefix "" {
#         policy = "write"
#       }
#       service_prefix "" {
#         policy = "read"
#       }
#       session_prefix "" {
#         policy = "read"
#       }

consul_acl_auth_methods: []
# consul_acl_auth_methods:
#   - Name: minikube
#     Type: kubernetes
#     Description: dev minikube cluster
#     Config:
#       Host: https://192.0.2.42:8443
#       CACert: |-
#         -----BEGIN CERTIFICATE-----
#         ...
#         -----END CERTIFICATE-----
#       ServiceAccountJWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

consul_acl_binding_rules: []
# consul_acl_binding_rules:
#   - Description: example rule
#     AuthMethod: minikube
#     BindType: service
#     BindName: consul

consul_acl_roles: []
# consul_acl_roles:
#   - Name: vault_reader
#     Description: Vault reader role
#     Policies:
#       - Name: vault_policy
#       - Name: node_policy
#     ServiceIdentities:
#       - ServiceName: web
#       - ServiceName: db
#         Datacenters:
#           - dc1
#     NodeIdentities:
#       - NodeName: server1
#         Datacenter: dc1
#       - NodeName: server2
#         Datacenter: dc1
#   - Name: vault_writer
#     Description: Vault writer role

consul_acl_tokens: []
# consul_acl_tokens:
#   - AccessorID: 818b9ccd-7bbb-9f6e-87e2-b4039d1f584a
#     SecretID: cc542a4d-3207-44a4-9d73-c0ac840439e9
#     Description: Token for Vault access
#     Policies:
#       - Name: vault_policy
#       - Name: node_policy
#     Roles:
#       - Name: vault_reader
#       - Name: vault_writer
#     ServiceIdentities:
#       - ServiceName: web
#       - ServiceName: db
#         Datacenters:
#           - dc1
#     NodeIdentities:
#       - NodeName: server1
#         Datacenter: dc1
#       - NodeName: server2
#         Datacenter: dc1
#     ExpirationTTL: 1h
#     AuthMethod: ""
#   - SecretID: 3d6b1138-ecbf-4e51-8312-40f84d95bff0

consul_sessions: []
# consul_sessions:
#   - Name: my-service-lock
#     LockDelay: 15s
#     Behavior: release
#     TTL": 30s
#     dc: dc1

consul_kv: []
# consul_kv:
#   - key: users/info
#     dc: dc1
#     flags: 42
#     value: |-
#       - firstname: first
#         lastname: last
#         middlename: middle

# Options for creating CA certificates
consul_tls_ca_create_options:
  - "-additional-name-constraint={{ groups[consul_servers_group_name] | map('extract', hostvars, 'inventory_hostname') | join(' -additional-name-constraint=') }}"
  - "-additional-name-constraint={{ groups[consul_servers_group_name] | map('extract', hostvars, 'ansible_host') | join(' -additional-name-constraint=') }}"
  - -domain={{ consul_domain }}
  - -name-constraint=true

# Options for creating server certificates
consul_tls_cert_create_options:
  - "-additional-dnsname={{ inventory_hostname }}"
  - "-additional-ipaddress={{ ansible_host }}"

consul_logrotate_config:
  paths:
    - "{{ consul_log_path }}/*.log"
  options:
    - daily
    - missingok
    - rotate 7
    - dateext
    - copytruncate
    - |-
      postrotate
          /usr/bin/systemctl reload consul
      endscript

consul_firewall_ports:
  - 8600/tcp
  - 8600/udp
  - 8500-8501/tcp
  - 8301-8302/tcp
  - 8301-8302/udp
  - 8300/tcp
  - 21000-21255/tcp
