- include_tasks: preinstall.yml
- include_tasks: install.yml

- name: generate CA certificates
  include_tasks: ca_certs.yml
  when: consul_agent_mode == 'server'

- name: generate server certificates
  include_tasks: server_certs.yml
  when: consul_agent_mode == 'server'

- meta: flush_handlers

- name: wait for consul port to become open
  wait_for:
    port: '{{ consul_port }}'

- name: wait for leader election
  uri:
    url: >-
      http://127.0.0.1:{{ consul_port }}/v1/status/leader
  register: leader_election_result
  until:
    - leader_election_result.status == 200
    - leader_election_result.json != ""
  retries: 5
  delay: 30

- set_fact:
    acl_consul_token: >-
      {{ acl_master_token if consul_agent_mode == 'server' else
        consul_config_options.acl.tokens.agent|default('', true) }}

- name: create checks
  include_tasks: create_checks.yml
  with_items: '{{ consul_checks|default([], true) }}'
  loop_control:
    loop_var: check
  when:
    - consul_config_options.acl.enabled|default(false, true)

- name: create services
  include_tasks: create_services.yml
  with_items: '{{ consul_services|default([], true) }}'
  loop_control:
    loop_var: service
  when:
    - consul_config_options.acl.enabled|default(false, true)

- block:
    - name: create acl auth methods
      include_tasks: create_acl_auth_method.yml
      with_items: '{{ consul_acl_auth_methods|default([], true) }}'
      loop_control:
        loop_var:  acl_auth_method

    - name: create acl binding rule
      include_tasks: create_acl_binding_rule.yml
      with_items: '{{ consul_acl_binding_rules|default([], true) }}'
      loop_control:
        loop_var:  acl_binding_rule

    - name: create acl policies
      include_tasks: create_acl_policy.yml
      with_items: '{{ consul_acl_policies|default([], true) }}'
      loop_control:
        loop_var: acl_policy

    - name: create acl roles
      include_tasks: create_acl_role.yml
      with_items: '{{ consul_acl_roles|default([], true) }}'
      loop_control:
        loop_var: acl_role

    - name: create acl tokens
      include_tasks: create_acl_tokens.yml
      with_items: '{{ consul_acl_tokens|default([], true) }}'
      loop_control:
        loop_var: acl_token

    - name: create sessions
      include_tasks: create_session.yml
      with_items: '{{ consul_sessions|default([], true) }}'
      loop_control:
        loop_var: session

    - include_tasks: create_kv.yml
      with_items: '{{ consul_kv|default([], true) }}'
      loop_control:
        loop_var: kv
  when: 
    - consul_agent_mode == 'server'
    - consul_config_options.acl.enabled|default(false, true)

- name: configure logrotate
  include_tasks: logrotate.yml