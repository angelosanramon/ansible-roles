- name: modify hosts file
  include_tasks: hostsfile.yml
  vars:
    server_groups: "{{ prometheus_servers_group_name }}"

- name: install and enable firewalld
  include_tasks: firewalld.yml
  vars:
    prometheus_component: prometheus
    firewall_ports: "{{ prometheus_firewall_ports }}"

- name: create prometheus user group
  group:
    name: '{{ prometheus_group }}'
    state: present

- name: create prometheus user
  user:
    name: '{{ prometheus_user }}'
    group: '{{ prometheus_group }}'
    shell: /sbin/nologin

- name: create prometheus directories
  file:
    path: '{{ item.path }}'
    state: directory
    owner: '{{ item.user }}'
    group: '{{ item.group }}'
    mode: '{{ item.mode }}'
  with_items:
    - { path: '{{ prometheus_config_path }}',
        user: '{{ prometheus_user }}',
        group: '{{ prometheus_group }}',
        mode: '0755' }
    - { path: '{{ prometheus_data_path }}',
        user: '{{ prometheus_user }}',
        group: '{{ prometheus_group }}',
        mode: '0755' }
    - { path: '{{ prometheus_certs_path }}',
        user: '{{ prometheus_user }}',
        group: '{{ prometheus_group }}',
        mode: '0700' }
    - { path: '{{ prometheus_log_path }}',
        user: '{{ prometheus_user }}',
        group: '{{ prometheus_group }}',        
        mode: '0755' }
    - { path: '{{ prometheus_config_path }}/rules',
        user: '{{ prometheus_user }}',
        group: '{{ prometheus_group }}',        
        mode: '0755' }

- name: download prometheus binary package
  get_url:
    url: '{{ prometheus_src_url }}'
    dest: /usr/local/src
    checksum: 'sha256:{{ prometheus_src_checksum }}'
  register: download_result

- set_fact:
    source_filename: >-
      {{ prometheus_src_url|urlsplit('path')|basename }}

- block:
    - name: uncompress prometheus binary package
      unarchive:
        src: /usr/local/src/{{ source_filename }}
        dest: /usr/local/src
        remote_src: yes

    - set_fact:
        dirname: "{{ source_filename.split('.')[:-2]|join('.') }}"

    - name: copy prometheus binary files
      copy:
        src: /usr/local/src/{{ dirname }}/{{ item }}
        dest: "{{ prometheus_bin_path }}/{{ item }}"
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        mode: 0755
        remote_src: yes
      with_items:
        - prometheus
        - promtool

    - name: copy prometheus console libraries
      copy:
        src: /usr/local/src/{{ dirname }}/{{ item }}
        dest: "{{ prometheus_config_path }}/{{ item }}"
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        directory_mode: 0755
        remote_src: yes
      with_items:
        - console_libraries
        - consoles
  when: download_result is changed

- name: create alert rules file
  template:
    src: prometheus_alert_rules.yml.j2
    dest: '{{ prometheus_config_path }}/rules/alert.rules'
    owner: '{{ prometheus_user }}'
    group: '{{ prometheus_group }}'
    mode: 0640
  when: prometheus_alert_rules|length > 0
  notify: restart prometheus

- name: create prometheus systemd file
  template:
    src: prometheus_systemd.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart prometheus

- name: create prometheus config file
  template:
    src: prometheus.yml.j2
    dest: '{{ prometheus_config_path }}/{{ prometheus_config_file }}'
    owner: '{{ prometheus_user }}'
    group: '{{ prometheus_group }}'
    mode: 0640
  notify: restart prometheus

- name: start prometheus
  service:
    name: prometheus
    state: started

- name: configure logrotate
  include_tasks: logrotate.yml
  vars:
    prometheus_component: prometheus
    logrotate_config: "{{ prometheus_logrotate_config }}"
