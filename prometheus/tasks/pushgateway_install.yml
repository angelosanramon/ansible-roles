- name: install and enable firewalld
  include_tasks: firewalld.yml
  vars:
    prometheus_component: pushgateway
    firewall_ports: "{{ pushgateway_firewall_ports }}"

- name: create pushgateway user group
  group:
    name: '{{ pushgateway_group }}'
    state: present

- name: create pushgateway user
  user:
    name: '{{ pushgateway_user }}'
    group: '{{ pushgateway_group }}'
    shell: /sbin/nologin

- name: create pushgateway log directory
  file:
    path: '{{ pushgateway_log_path }}'
    state: directory
    owner: '{{ pushgateway_user }}'
    group: '{{ pushgateway_group }}'
    mode: 0755

- name: download pushgateway binary package
  get_url:
    url: '{{ pushgateway_src_url }}'
    dest: /usr/local/src
    checksum: 'sha256:{{ pushgateway_src_checksum }}'
  register: download_result

- set_fact:
    source_filename: >-
      {{ pushgateway_src_url|urlsplit('path')|basename }}

- block:
    - name: uncompress pushgateway binary package
      unarchive:
        src: /usr/local/src/{{ source_filename }}
        dest: /usr/local/src
        remote_src: yes

    - set_fact:
        dirname: "{{ source_filename.split('.')[:-2]|join('.') }}"

    - name: copy pushgateway binary files
      copy:
        src: /usr/local/src/{{ dirname }}/pushgateway
        dest: "{{ pushgateway_bin_path }}/pushgateway"
        owner: "{{ pushgateway_user }}"
        group: "{{ pushgateway_group }}"
        mode: 0755
        remote_src: yes
  when: download_result is changed

- name: create pushgateway systemd file
  template:
    src: pushgateway_systemd.service.j2
    dest: /etc/systemd/system/pushgateway.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart pushgateway

- name: start pushgateway
  service:
    name: pushgateway
    state: started

- name: configure logrotate
  include_tasks: logrotate.yml
  vars:
    prometheus_component: node_exporter
    logrotate_config: "{{ node_exporter_logrotate_config }}"
