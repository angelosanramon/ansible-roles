- name: create grafana user group
  group:
    name: '{{ grafana_group }}'
    state: present

- name: create grafana user
  user:
    name: '{{ grafana_user }}'
    group: '{{ grafana_group }}'
    shell: /bin/false

- name: create grafana directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: 0755
  with_items:
    - "{{ grafana_data_path }}"
    - "{{ grafana_certs_path }}"
    - "{{ grafana_log_path }}"
    - "{{ grafana_home_path }}"
    - "{{ grafana_config_path }}"

- name: download grafana binary package
  get_url:
    url: >-
      https://dl.grafana.com/oss/release/grafana-{{
      grafana_version }}.linux-amd64.tar.gz
    dest: /usr/local/src
    checksum: sha256:{{ grafana_checksum }}
  register: download_result

- name: extract grafana package
  unarchive:
    src: >-
      /usr/local/src/grafana-{{ grafana_version }}.linux-amd64.tar.gz
    dest: "{{ grafana_home_path }}"
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    extra_opts:
      - --strip-components=1
    remote_src: yes
    validate_certs: no

- name: create prometheus systemd file
  template:
    src: grafana-server_systemd.service.j2
    dest: /etc/systemd/system/grafana-server.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart grafana

- name: create grafana config file
  template:
    src: grafana.ini.j2
    dest: "{{ grafana_config_path }}/{{ grafana_config_file }}"
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: 0640
  notify: restart grafana

- name: start grafana
  service:
    name: grafana-server
    enabled: yes
    state: started
