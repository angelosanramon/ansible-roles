- name: check if vault is already initialized
  uri:
    url: >-
      http://127.0.0.1:{{ vault_port }}/v1/sys/health
    status_code: [200, 429, 472, 473, 501, 503]
  register: vault_initialize_check
  delegate_to: '{{ item }}'
  until: vault_initialize_check.status in [200, 429, 472, 473, 501, 503]
  retries: 5
  delay: 10
  run_once: yes

- set_fact:
    vault_initialized: '{{ vault_initialize_check.json.initialized }}'
  delegate_to: '{{ item }}'
  run_once: yes

- block:
    - name: initialize vault
      uri:
        url: >-
          http://127.0.0.1:{{ vault_port }}/v1/sys/init
        method: PUT
        body_format: json
        body: '{{ vault_initialization_options }}'
      register: vault_initialize_result
      no_log: true

    - set_fact:
        unseal_keys: '{{ vault_initialize_result.json.values()|list|first }}'
        init_root_token: '{{ vault_initialize_result.json.values()|list|last }}'

    - name: save unseal keys to file
      copy:
        content: "{{ unseal_keys|join('\n') }}"
        dest: "{{ vault_data_path }}/.vault_unseal_keys"
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"
        mode: 0600
      no_log: true

    - include_tasks: copyto_unseal_keys.yml
      with_items: >-
        {{ groups[vault_servers_group_name]|
          reject('search', inventory_hostname)|list }}
      loop_control:
        loop_var: dest_host
  when: not vault_initialized
  delegate_to: '{{ item }}'
  run_once: yes
