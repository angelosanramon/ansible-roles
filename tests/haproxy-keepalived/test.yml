---
- name: setup keepalived
  hosts: haproxy_servers
  become: yes
  roles:
    - name: haproxy
    - name: keepalived
      vars:
        keepalived_configs:
          global_defs:
            notification_email:
              - email@example.com
            notification_email_from: email@example.com
            smtp_server: 127.0.0.1
            smtp_connect_timeout: 15
          vrrp_script:
            - name: chk_haproxy
              script: "'/usr/sbin/pidof haproxy'"
              interval: 2
              weight: 2
          vrrp_instance:
            - name: HProxyLB_1
              interface: |-
                {%- for key, value in ansible_facts.items() if 
                  value.ipv4.network is defined and 
                  value.ipv4.network == '192.168.4.0' -%}
                {{- key -}}
                {%- endfor -%}
              state: >-
                {{- 'MASTER' if groups.haproxy_servers|first == inventory_hostname else
                  'BACKUP' -}}
              priority: >-
                {%- for hostname in groups.haproxy_servers|reverse -%}
                  {%- if hostname == inventory_hostname -%}
                    {{- loop.index -}}
                  {%- endif -%}
                {%- endfor -%}
              virtual_router_id: 1
              smtp_alert:
              authentication:
                auth_type: PASS
                auth_pass: mypassword
              unicast_src_ip: >-
                {%- for key, value in ansible_facts.items() if 
                  value.ipv4.network is defined and 
                  value.ipv4.network == '192.168.4.0' -%}
                {{- value.ipv4.address -}}
                {%- endfor -%}
              unicast_peer: >-
                {%- set servers = [] -%}
                {%- for hostname in groups.haproxy_servers if 
                  hostname != inventory_hostname -%}
                  {%- for key, value in hostvars[hostname].ansible_facts.items() if
                    value.ipv4.network is defined and 
                    value.ipv4.network == '192.168.4.0' -%}
                    {{- servers.append(value.ipv4.address) -}}
                  {%- endfor -%}
                {%- endfor -%}
                {{- servers -}}
              virtual_ipaddress:
                - 192.168.4.100
              track_script:
                - chk_haproxy
