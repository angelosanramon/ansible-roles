---
- name: create prometheus cluster
  hosts: prometheus_servers
  become: yes
  roles:
    - name: chrony
    - name: prometheus
      include_vars: defaults/node_exporter.yml
      vars:
        prometheus_components:
          alertmanager:
            installed: true
          node_exporter:
            installed: true
          blackbox_exporter:
            installed: true
          consul_exporter:
            installed: true
          graphite_exporter:
            installed: true
          haproxy_exporter:
            installed: true
          memcached_exporter:
            installed: true
          mysqld_exporter:
            installed: true
          pushgateway:
            installed: true
          statsd_exporter:
            installed: true
        prometheus_scrape_configs:
          - job_name: prometheus
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    prometheus_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: node exporters
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    node_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: blackbox exporters
            metrics_path: /probe
            params:
              module: [http_2xx]
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    blackbox_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
            relabel_configs:
              - source_labels: [__address__]
                target_label: __param_target
              - source_labels: [__param_target]
                target_label: instance
          - job_name: consul exporters
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    consul_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: graphite exporters
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    graphite_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: haproxy exporters
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    haproxy_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: memcached exporters
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    memcached_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: mysqld exporters
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    mysqld_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: statsd exporters
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    statsd_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: pushgateway
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    pushgateway_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
        prometheus_alertmanager_config:
          - static_configs:
            - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    alertmanager_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
        prometheus_alert_rules:
          - name: alert rules
            rules:
            - alert: EndpointDown
              expr: probe_success == 0
              for: 10s
              labels:
                severity: "critical"
              annotations:
                summary: "Endpoint  down"
        alertmanager_servers_group_name: prometheus_servers
        alertmanager_route_config:
          group_by:
            - alertname
          group_wait: 10s
          group_interval: 10s
          repeat_interval: 1h
          receiver: web.hook
        alertmanager_receivers_config:
          - name: web.hook
            webhook_configs:
            - url: http://127.0.0.1:5001/
        alertmanager_inhibit_rules_config:
          - source_match:
              severity: critical
            target_match:
              severity: warning
            equal:
              - alertname
              - dev
              - instance
        blackbox_exporter_modules_config:
          http_2xx:
            prober: http
            timeout: 5s
            http:
              valid_status_codes: []
              method: GET
