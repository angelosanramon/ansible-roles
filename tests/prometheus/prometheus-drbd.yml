---
- name: sync clock
  hosts: all
  become: yes
  roles:
    - name: chrony

- name: create drbd cluster
  hosts: prometheus_servers
  become: yes
  roles:
    - name: drbd
      vars:
        drbd_servers_group_name: prometheus_servers
        drbd_resources_conf:
          - name: drbd1
            meta-disk: internal
            device: /dev/drbd1
            disk: /dev/sdb1
            options:
              auto-promote: 'no'
            net:
              verify-alg: sha256
            'on':
              - name: prometheus1.cluster.local
                node-id: 0
                address: 192.168.1.80:7788
              - name: prometheus2.cluster.local
                node-id: 1
                address: 192.168.1.81:7788
            connection-mesh:
              hosts: prometheus1.cluster.local prometheus2.cluster.local
  post_tasks:
    - name: create prometheus user group
      group:
        name: prometheus
        state: present

    - name: create prometheus user
      user:
        name: prometheus
        group: prometheus
        shell: /sbin/nologin

    - name: create prometheus mount point
      file:
        path: /var/lib/prometheus
        state: directory
        owner: prometheus
        group: prometheus
        mode: 0755

    - name: get drbd role
      shell: /sbin/drbdadm drbdadm role drbd1
      register: role
      changed_when: false

    - block:
        - name: format drbd1 device
          filesystem:
            fstype: xfs
            dev: /dev/drbd1

        - name: mount drbd1 to prometheus mount point
          mount:
            path: /var/lib/prometheus
            src: /dev/drbd1
            fstype: xfs
            state: mounted
      when: role.stdout == 'Primary'

    - name: create drbd before demote script
      copy:
        content: |
          /sbin/pidof prometheus
          if [ $? -eq 0 ]; then
              echo "stopping prometheus" >> /tmp/pre_demote.out
              /bin/systemctl stop prometheus
          fi
        dest: /etc/drbd.d/scripts/pre_demote.sh
        owner: root
        group: root
        mode: 0744

    - name: create drbd after demote script
      copy:
        content: |
          /sbin/pidof prometheus
          if [ $? -ne 0 ]; then
              echo "starting prometheus" >> /tmp/post_demote.out
              /bin/systemctl start prometheus
          fi
        dest: /etc/drbd.d/scripts/post_demote.sh
        owner: root
        group: root
        mode: 0744

    - name: create drbd after promote script
      copy:
        content: |
          /bin/mount | grep -w drbd1
          if [ $? -ne 0 ]; then 
              echo "mounting drbd1" >> /tmp/post_promote.out
              /bin/mount /dev/drbd1 /var/lib/prometheus
          fi

          /sbin/pidof prometheus
          if [ $? -ne 0 ]; the
              echo "starting prometheus" >> /tmp/post_promote.out
              /bin/systemctl start prometheus
          fi
        dest: /etc/drbd.d/scripts/post_promote.sh
        owner: root
        group: root
        mode: 0744

- name: create prometheus cluster
  hosts: prometheus_servers
  become: yes
  roles:
    - name: prometheus
      include_vars: defaults/node_exporter.yml
      vars:
        prometheus_components:
          alertmanager:
            installed: true
          node_exporter:
            installed: true
        prometheus_scrape_configs:
          - job_name: prometheus
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    prometheus_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
          - job_name: node exporters
            static_configs:
              - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    node_exporter_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
        prometheus_alertmanager_config:
          - static_configs:
            - targets: >-
                  {%- set servers = [] -%}
                  {%- for server in groups[prometheus_servers_group_name] -%}
                    {{- servers.append(server + ':' + 
                    alertmanager_web_listen_port|string) -}}
                  {%- endfor-%}
                  {{- servers -}}
        alertmanager_servers_group_name: prometheus_servers
        alertmanager_route_config:
          group_by:
            - alertname
          group_wait: 10s
          group_interval: 10s
          repeat_interval: 1h
          receiver: web.hook
        alertmanager_receivers_config:
          - name: web.hook
            webhook_configs:
            - url: http://127.0.0.1:5001/

- name: install keepalived
  hosts: prometheus_servers
  become: yes
  roles:
    - name: keepalived
      vars:
        keepalived_configs:
          global_defs:
            notification_email:
              - email@example.com
            notification_email_from: email@example.com
            smtp_server: 127.0.0.1
            smtp_connect_timeout: 15
          vrrp_script:
            - name: chk_prometheus
              script: "{{ keepalived_config_path }}/scripts/chk_prometheus.sh"
              interval: 2
              weight: 2
          vrrp_instance:
            - name: Prometheus_HA
              interface: |-
                {%- for key, value in ansible_facts.items() if
                  value.ipv4.network is defined and
                  value.ipv4.network == '192.168.1.0' -%}
                {{- key -}}
                {%- endfor -%}
              state: >-
                {{- 'MASTER' if groups.prometheus_servers|
                first == inventory_hostname else 'BACKUP' -}}
              priority: >-
                {%- for hostname in groups.prometheus_servers|reverse -%}
                  {%- if hostname == inventory_hostname -%}
                    {{- loop.index -}}
                  {%- endif -%}
                {%- endfor -%}
              virtual_router_id: 2
              smtp_alert:
              authentication:
                auth_type: PASS
                auth_pass: mypassword
              unicast_src_ip: >-
                {%- for key, value in ansible_facts.items() if
                  value.ipv4.network is defined and
                  value.ipv4.network == '192.168.1.0' -%}
                {{- value.ipv4.address -}}
                {%- endfor -%}
              unicast_peer: >-
                {%- set servers = [] -%}
                {%- for hostname in groups.prometheus_servers if
                  hostname != inventory_hostname -%}
                  {%- for key, value in hostvars[hostname].ansible_facts.items() if
                    value.ipv4.network is defined and
                    value.ipv4.network == '192.168.1.0' -%}
                    {{- servers.append(value.ipv4.address) -}}
                  {%- endfor -%}
                {%- endfor -%}
                {{- servers -}}
              virtual_ipaddress:
                - 192.168.1.100
              track_script:
                - chk_prometheus
              notify_master: /etc/drbd.d/scripts/promote_to_primary.sh
              notify_backup: /etc/drbd.d/scripts/demote_to_secondary.sh
  post_tasks:
    - name: create prometheus check script
      copy:
        content: |-
          #!/bin/bash

          stat_code=$(curl -L -o /dev/null -s -w "%{http_code}\n" \
              http://localhost:9090/status)

          if [ $stat_code -eq 200 ]; then
              exit 0
          else
              exit 1
          fi
        dest: "{{ keepalived_config_path }}/scripts/chk_prometheus.sh"
        owner: root
        group: root
        mode: 0744
      notify: reload keepalived
