---
- name: install haproxy
  hosts: haproxy_servers
  become: yes
  roles:
    - name: haproxy
      vars:
        haproxy_defaults_config:
          timeout:
            - connect 10s
            - client 30s
            - server 30s
          log: global
          mode: http
          option: httplog
        haproxy_frontends_config:
          consul.cluster.local:
            bind: "{{ ansible_host }}:8500"
            default_backend: consul_servers
          vault.cluster.local:
            bind: "{{ ansible_host }}:8100"
            default_backend: vault_servers
        haproxy_backends_config:
          consul_servers:
            balance: roundrobin
            option: httpchk GET /v1/status/leader
            default-server: check inter 10s
            server: >-
              {%- set servers = [] -%}
              {%- for hostname in groups.consul_servers -%}
              {{ servers.append(hostname + ' ' +
                hostvars[hostname].ansible_host + ':' + '8500') }}
              {%- endfor -%}
              {{ servers }}
          vault_servers:
            balance: roundrobin
            option: httpchk GET /v1/sys/health
            http-check: expect status 200,429
            default-server: check inter 10s
            server: >-
              {%- set servers = [] -%}
              {%- for hostname in groups.vault_servers -%}
              {{ servers.append(hostname + ' ' +
                hostvars[hostname].ansible_host + ':' + 
                '8200') }}
              {%- endfor -%}
              {{ servers }}
        haproxy_firewall_ports:
          - 8404/tcp
          - 8500/tcp
          - 8100/tcp

- name: install consul
  hosts: consul_servers
  become: yes
  vars:
    consul_config_options:
      enable_local_script_checks: true
      leave_on_terminate: true
      rejoin_after_leave: true
      log_level: INFO
      log_rotate_max_files: 7
      ui: true
      dns_config:
        enable_truncate: true
        only_passing: true
      acl:
        enabled: true
        enable_token_persistence: true
        default_policy: deny
      connect:
        enabled: true
      ca_file: '{{ consul_certs_path }}/{{ consul_domain }}-agent-ca.pem'
      cert_file: '{{ consul_certs_path }}/{{ consul_datacenter }}-server-{{ consul_domain }}-0.pem'
      key_file: '{{ consul_certs_path }}/{{ consul_datacenter }}-server-{{ consul_domain }}-0-key.pem'
      verify_incoming: true
      verify_outgoing: true
      verify_incoming_rpc: true
      verify_server_hostname: true
      encrypt: KVEWESv8Odqmlrn3BXMkHMnrFhkTEtIXk+ZXYqYvzYY=
      auto_encrypt:
        allow_tls: true
    consul_acl_policies:
      - Name: vault_policy
        Description: Policy for Vault access
        Rules: |-
          key_prefix "vault/" {
            policy = "write"
          }
          node_prefix "" {
            policy = "write"
          }
          service "vault" {
            policy = "write"
          }
          agent_prefix "" {
            policy = "write"
          }
          session_prefix "" {
            policy = "write"
          }
      - Name: consul_agent_policy
        Description: Policy for Consul agent node
        Rules: |-
          agent_prefix "" {
            policy = "write"
          }
          node_prefix "" {
            policy = "write"
          }
          service_prefix "" {
            policy = "read"
          }
          session_prefix "" {
            policy = "read"
          }
    consul_acl_tokens:
      - SecretID: cc542a4d-3207-44a4-9d73-c0ac840439e9
        Description: Token for Vault access
        Policies:
          - Name: vault_policy
      - SecretID: 87106a90-47e3-43eb-b1ca-86eec7ca1497
        Description: Token for Consul agent
        Policies:
          - Name: consul_agent_policy
  roles: 
    - name: consul
  post_tasks:
    - name: get consul ca certificate
      fetch:
        src: '{{ consul_certs_path }}/{{ consul_domain }}-agent-ca.pem'
        dest: /tmp/{{ consul_domain }}-agent-ca.pem
        flat: yes
      run_once: yes

- name: install vault
  hosts: vault_servers
  become: yes
  vars:
    consul_certs_path: /etc/consul/consul.d/tls
    consul_user: consul
    consul_group: consul
    consul_domain: consul

  pre_tasks:
    - name: create consul user group
      group:
        name: '{{ consul_group }}'
        state: present

    - name: create consul user
      user:
        name: '{{ consul_user }}'
        comment: Consul user
        group: '{{ consul_group }}'
        shell: /bin/false

    - name: create consul tls directory
      file:
        path: '{{ consul_certs_path }}'
        state: directory
        owner: '{{ consul_user }}'
        group: '{{ consul_group }}'
        mode: 0700

    - name: copy consul ca certificate to vault servers
      copy:
        src: /tmp/{{ consul_domain }}-agent-ca.pem
        dest: '{{ consul_certs_path }}/{{ consul_domain }}-agent-ca.pem'
        owner: '{{ consul_user }}'
        group: '{{ consul_group }}'
        mode: '0644'
  roles: 
    - name: consul
      vars:
        consul_config_options:
          leave_on_terminate: true
          rejoin_after_leave: true
          log_level: INFO
          log_rotate_max_files: 7
          acl:
            enabled: true
            enable_token_persistence: true
            default_policy: deny
            tokens:
              agent: 87106a90-47e3-43eb-b1ca-86eec7ca1497
          auto_encrypt:
            tls: true
          ca_file: '{{ consul_certs_path }}/{{ consul_domain }}-agent-ca.pem'
          verify_incoming: true
          verify_outgoing: true
          verify_incoming_rpc: true
          verify_server_hostname: true
          encrypt: KVEWESv8Odqmlrn3BXMkHMnrFhkTEtIXk+ZXYqYvzYY=
          start_join:
            - 192.168.1.40
            - 192.168.1.41
            - 192.168.1.43
          retry_join:
            - 192.168.1.40
            - 192.168.1.41
            - 192.168.1.43        
        consul_agent_mode: client
    - name: vault
      vars:
        vault_auto_unseal: true
        vault_config_options:
          ui: true
          listener:
            - tcp:
                address: 0.0.0.0:{{ vault_port }}
                cluster_address: '{{ ansible_host}}:{{ vault_cluster_port }}'
                tls_disable: true
          storage:
            consul:
              address: "{{ hostvars[groups.haproxy_servers[0]].ansible_host }}:8500"
              token: cc542a4d-3207-44a4-9d73-c0ac840439e9
          api_addr: http://{{ ansible_host}}:{{ vault_port }}
          cluster_addr: 'https://{{ ansible_host }}:{{ vault_cluster_port }}'
          log_level: info
          log_format: standard
          pid_file: '{{ vault_run_path }}/vault.pid'
        vault_policies:
          - name: vault_admin
            policy: |-
              path "sys/health"
              {
                capabilities = ["read", "sudo"]
              }

              path "sys/policies/acl"
              {
                capabilities = ["list"]
              }

              path "sys/policies/acl/*"
              {
                capabilities = ["create", "read", "update", "delete", "list", "sudo"]
              }

              path "auth/*"
              {
                capabilities = ["create", "read", "update", "delete", "list", "sudo"]
              }

              path "sys/auth/*"
              {
                capabilities = ["create", "update", "delete", "sudo"]
              }

              path "sys/auth"
              {
                capabilities = ["read"]
              }

              path "secret/*"
              {
                capabilities = ["create", "read", "update", "delete", "list", "sudo"]
              }

              path "sys/mounts/*"
              {
                capabilities = ["create", "read", "update", "delete", "list", "sudo"]
              }

              path "sys/mounts"
              {
                capabilities = ["read"]
              }
        vault_userpass_users:
          - username: vault_admin
            password: mypassword
            token_policies:
              - vault_admin
  post_tasks:
    - name: delete ca cert file
      file:
        path: /tmp/{{ consul_domain }}-agent-ca.pem
        state: absent
