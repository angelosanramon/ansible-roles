---
haproxy_version: 2.3.0
haproxy_user: haproxy
haproxy_group: haproxy
haproxy_config_path: /etc/haproxy
haproxy_config_file: haproxy.cfg
haproxy_run_path: /run/haproxy
haproxy_pid_file: haproxy.pid
haproxy_log_path: /var/log/haproxy
haproxy_log_file: haproxy.log
haproxy_certs_path: "{{ haproxy_config_path }}/tls"
haproxy_chroot_path: /var/lib/haproxy
haproxy_install_path: /usr/local
haproxy_servers_group_name: haproxy_servers
haproxy_systemd_file_descriptor_limit: 66560
haproxy_match_process_cpu: false

haproxy_global_config:
  maxconn: 10000
  log: 127.0.0.1 local0
  tune.ssl.default-dh-param: 2048

haproxy_defaults_config: {}
# haproxy_defaults_config:
#   timeout:
#     - connect 10s
#     - client 30s
#     - server 30s
#   log: global
#   mode: http
#   option: httplog
#   maxconn: 3000

haproxy_frontends_config: {}
# haproxy_frontends_config:
#   www.mysite.com:
#     bind:
#       - "{{ ansible_host }}:80"
#     http-request: redirect scheme https unless { ssl_fc }
#     default_backend: web_servers

haproxy_backends_config: {}
# haproxy_backends_config:
#   web_servers:
#     balance: roundrobin
#     cookie: SERVERUSED insert indirect nocache
#     option: httpchk HEAD /
#     default-server: check maxconn 20
#     server:
#       - server1 10.0.1.3:80 cookie server1
#       - server2 10.0.1.4:80 cookie server2

haproxy_listens_config:
  haproxy_stats:
    bind: :8404
    mode: http
    option: httplog
    timeout: client 10s
    stats:
      - enable
      - uri /stats
      - refresh 10s
      - admin if LOCALHOST

haproxy_log_forwards_config: {}
# haproxy_log_forwards_config:
#   sylog-loadb:
#     bind: udp4@127.0.0.1:1514
#     log:
#       - global
#       - ring@myring local0
#       - 127.0.0.1:10001 sample 1:4 local0
#       - 127.0.0.1:10002 sample 2:4 local0
#       - 127.0.0.1:10003 sample 3:4 local0
#       - 127.0.0.1:10004 sample 4:4 local0

haproxy_userlists_config: {}
# haproxy_userlists_config:
#   L1:
#     group:
#       - G1 users tiger,scott
#       - G2 users xdb,scott
#     user:
#       - tiger password $6$k6y3o.eP$JlKBx9za9667qe4(...)xHSwRv6J.C0/D7cV91
#       - scott insecure-password elgato
#       - xdb insecure-password hello

haproxy_peers_config: {}
# haproxy_peers_config:
#   test-peers:
#     bind: "{{ ansible_host }}:10001"
#     server: >-
#       {%- set peers = [] -%}
#       {%- for hostname in groups[haproxy_servers_group_name]|
#         reject('search', inventory_hostname) -%}
#       {{ peers.append(hostname + ' ' + hostvars[hostname].ansible_host + 
#         ':' + '10001') }}
#       {%- endfor -%}
#       {{ peers + [inventory_hostname] }}
#   mypeers:
#     bind: 127.0.0.11:10001 ssl crt mycerts/pem
#     default-server: ssl verify none
#     server:
#       - hostA 127.0.0.10:10000
#       - hostB

haproxy_mailers_config: {}
# haproxy_mailers_config:
#   mymailers:
#     mailer:
#       - smtp1 192.168.0.1:587
#       - smtp2 192.168.0.2:587

haproxy_programs_config: {}
# haproxy_programs_config:
#   test-program:
#     command: cat /var/log/haproxy/haproxy.log
#     user: haproxy
#     group: haproxy
#     option: start-on-reload

haproxy_http_errors_config: {}
# haproxy_http_errors_config:
#   website-1:
#     errorfile:
#       - 400 /etc/haproxy/errorfiles/site1/400.http
#       - 404 /etc/haproxy/errorfiles/site1/404.http
#       - 408 /dev/null

haproxy_rings_config: {}
# haproxy_rings_config:
#   myring:
#     description: '"My local buffer"'
#     format: rfc3164
#     maxlen: 1200
#     size: 32764
#     timeout:
#       - connect 5s
#       - server 10s
#       - mysyslogsrv 127.0.0.1:6514 log-proto octet-count

haproxy_resolvers_config: {}
# haproxy_resolvers_config:
#   mydns:
#     nameserver:
#       - dns1 10.0.0.1:53
#       - dns2 10.0.0.2:53
#     parse-resolv-conf:
#     resolve_retries: 3
#     timeout:
#       - resolve 1s
#       - retry 1s
#     hold:
#       - other 30s
#       - refused 30s
#       - nx 30s
#       - timeout 30s
#       - valid 10s
#       - obsolete 30s

haproxy_build_options:
  - >-
    {%- if ansible_kernel.split('-')[0] is
      version('2.6.28','>=', strict=True) -%}
    TARGET=linux-glibc
    {%- else -%}
    TARGET=generic
    {%- endif -%}
  - CPU=native
  - ARCH={{ ansible_architecture }}
  - USE_PCRE=1
  - USE_LINUX_SPLICE=1
  - USE_LIBCRYPT=1
  - USE_OPENSSL=1
  - USE_ZLIB=1
  - USE_SYSTEMD=1
  - PREFIX={{ haproxy_install_path }}

haproxy_build_dependencies:
- make
- "{{ 'c-basic' if ansible_os_family == 'ClearLinux' else 'gcc' }}"
- "{{ 'devpkg-pcre' if ansible_os_family == 'ClearLinux' else 'pcre-devel' }}"
- "{{ 'devpkg-openssl' if ansible_os_family == 'ClearLinux' else 'openssl-devel' }}"
- "{{ 'devpkg-systemd' if ansible_os_family == 'ClearLinux' else 'systemd-devel' }}"
